- if @person.primary_tech.present?
  p
    | Primary tech:&nbsp;
    strong = @person.primary_tech

p
  | Status:&nbsp;
  span style="background-color: #{PERSON_STATUS_COLORS[@person.status]};"
    = @person.status.presence || 'n/a'

- if @person.source.present?
  p
    | Hiring Source:&nbsp;
    strong = with_newlines(@person.source)

- if @person.skills.present?
  p
    | Skills:&nbsp;
    strong = @person.skills

- if @person.skype.present?
  p
    | Skype:&nbsp;
    strong
      a href="skype:#{@person.skype}" #{@person.skype}

- if @person.linkedin.present?
  p
    | LinkedIn:&nbsp;
    strong
      a target="_blank" href="#{@person.linkedin_value}" View

- if @person.city.present?
  p
    | City:&nbsp;
    strong = @person.city.presence

- vacancies = Vacancy.where(tag: @person.tag_list).order(id: :desc)
- if vacancies.present?
  p
    | Vacancies:&nbsp;
    - vacancies.each do |vacancy|
      = link_to "#{vacancy.project}, #{vacancy.role}", vacancy_path(vacancy)
      | &nbsp;(
      = vacancy.status
      | )&nbsp;

- unless @person.tag_list.empty?
  p
    | Tags:&nbsp;
    - @person.tag_list.each do |tag|
      = link_to tag, people_path(q: {by_tag_including: tag})
      | &nbsp;

- if @person.english.present?
  p
    | English:&nbsp;
    strong
      = @person.english

- if current_user.has_access_to_finances? && @person.expected_salary.present?
  p
    | Expected salary:&nbsp;
    strong = @person.expected_salary

- if @person.email.present?
  p
    | Email:&nbsp;
    - if @person.status.in?(Person::EMPLOYEE_STATUSES) && !ENV['COMPANY_EMAIL_MASK'].in?(@person.email)
      span style="color: red"
        = @person.email
    - else
      strong
        = @person.email

- if @person.phone.present?
  p
    | Phone:&nbsp;
    strong
      a href="tel:#{@person.phone}" #{@person.phone}

h3
  | Latest notes &nbsp;
  = link_to 'Add', new_note_path(note: {person_id: @person.id}), class: 'btn btn-default'

- @person.notes.accessible_by(current_ability).order(updated_at: :desc).each do |note|
  p
    = note.created_at.strftime(t(:datetime_full)).gsub('00:00, ', '')
    | &nbsp;(#{note.updated_by&.email&.split('@')&.first || '?'})&nbsp;

    - if !note.type.in?(Note::FINANCE_TYPES) || (note.type.in?(Note::FINANCE_TYPES) && current_user.has_access_to_finances?)
      a href="#{edit_note_path(note)}" #{note.type}
      br
      ' #{with_newlines(note.value)}
    - else
      = "Content of this note is not available (#{note.type})"
  br

h3
  | Actions &nbsp;
  = link_to 'Add', new_action_point_path(action_point: {person_id: @person.id}), class: 'btn btn-default'

- @person.action_points.order(is_completed: :asc, perform_on: :desc).each do |action|
  p
    a href="#{edit_action_point_path(action)}" #{action.perform_on.strftime(t(:datetime_full)).gsub('00:00, ', '')}
    | &nbsp; #{action.is_completed? ? 'completed' : ''}
    br
    = with_newlines(action.value)

h3
  | Attachments &nbsp;
  = link_to 'Add', new_attachment_path(attachment: {person_id: @person.id}), class: 'btn btn-default'

- @person.attachments.order(created_at: :desc).each do |attachment|
  p
    = link_to (attachment.name.present? ? attachment.name : attachment.file_filename), Refile.attachment_url(attachment, :file)
    - if attachment.description.present?
      br = with_newlines(attachment.description)
  br
