h2.title 
  | PEOPLE &nbsp;
  a.btn.btn-default.btn-pill href="/"
    i.fa.fa-plus
    | &nbsp; Add person

.search-form
  form.form action="#{people_path}" method="GET"
    .row
      .col-md-10
        .form-group
          input.form-control type="text" name="q[#{Person::SEARCH_STR}]" placeholder="Anything" value="#{params[:q] && params[:q][Person::SEARCH_STR.to_sym]}"
      .col-md-2
        .form-group
          button.btn.btn-primary.btn-wide type="submit" 
            i.fa.fa-search
            | &nbsp; Search
    .row
      .col-md-6
        .form-group
          label.control-label
            | Tags:
          select.form-control.js-select2-select multiple="multiple" name="q[by_tag_including][]" class="form-control"
            - ActsAsTaggableOn::Tag.all.pluck(:name).each do |tag|
              - if params.dig(:q, :by_tag_including) && tag.in?(Array.wrap(params[:q][:by_tag_including]))
                option value="#{tag}" selected="selected" #{tag}
              - else
                option value="#{tag}" #{tag}
      .col-md-6
        .form-group
          label.control-label
            | Exclude Tags:
          select.form-control.js-select2-select multiple="multiple" name="q[by_tag_excluding][]" class="form-control"
            - ActsAsTaggableOn::Tag.all.pluck(:name).each do |tag|
              - if params.dig(:q, :by_tag_excluding) && tag.in?(Array.wrap(params[:q][:by_tag_excluding]))
                option value="#{tag}" selected="selected" #{tag}
              - else
                option value="#{tag}" #{tag}

table.table.pretty-table
  thead
    th = sort_link @q, :id
    th = sort_link @q, :name
    th = sort_link @q, :primary_tech
    th = sort_link @q, :priority
    th Activity
    th Info
    th Actions
  tbody
    - @people.each do |record|
      tr
        td = record.id
        td
          strong
            = link_to record.name.titleize, person_path(record)
          br
          = link_to '+ Note', new_note_path(person_id: record.id)
          br
          = link_to '+ Evaluate', new_assessment_path(person_id: record.id)
          br
          = link_to '+ Action', new_action_point_path(person_id: record.id)
          br
          = link_to '+ Attachment', new_attachment_path(person_id: record.id)
        td
          - if record.primary_tech.present?
            = link_to record.primary_tech, people_path(q: { primary_tech_eq: record.primary_tech })
          br
          - if assessment = record.assessments.last
            ' Evaluated:
            a href="#{edit_assessment_path(assessment)}" #{assessment.total} points
            | , #{assessment.updated_at.strftime('%e %b %Y')}

        td
          - if record.priority.present?
            = link_to record.priority, people_path(q: { priority_eq: record.priority })
        td
          - record.action_points.each do |action_point|
            - next if action_point.is_completed
            a href="#{edit_action_point_path(action_point)}" #{action_point.perform_on.strftime('%e %b %Y')}
            | &nbsp;
            = action_point.value
            br
          - unless record.notes.empty?
            | Latest notes:
            br
            - Note::TYPES.each do |type|
              - record.notes.select { |n| n.type == type}.sort { |a, b| b.updated_at <=> a.updated_at}.first.tap do |note|
                - if note.present?
                  a href="#{edit_note_path(note)}" #{note.type}
                  ' : #{with_newlines(truncate(note.value, length: 300, escape: false))}
                  br
        td
          - if record.attachments.size > 0
            | Attachments:&nbsp;
            br
            - record.attachments.each do |attachment|
              = link_to (attachment.name.present? ? attachment.name : attachment.file_filename), Refile.attachment_url(attachment, :file)
              br
          - if record.city
            ' City:
            = link_to record.city, people_path(q: { city_eq: record.city })
            br
          - if record.phone
            ' Phone: #{record.phone}
            br
          - if record.skype
            ' Skype: #{record.skype}
            br
          - if record.linkedin
            ' LinkedIn:
            a href="#{record.linkedin}" Link
            br
          - if record.facebook
            ' Facebook:
            a href="#{record.facebook}" Link
            br
          - if record.wants_relocate
            ' Relocate: #{record.wants_relocate ? 'yes' : '-'}
            br
          - if record.english
            ' English:
            = link_to record.english, people_path(q: { english_eq: record.english })
            br
          - unless record.tag_list.empty?
            ' Tags:&nbsp;
            - record.tag_list.each do |tag|
              = link_to tag, '#'
              | &nbsp;
        td
          a href="#{edit_person_path(record)}"
            i.fa.fa-pencil
