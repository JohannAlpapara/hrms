.js-edit-form-container style="display:none;"
  h2.title
    | Edit #{@person.name}
    | &nbsp;
    a.btn.btn-default href="#{person_path(@person)}" Back
  = render 'people/form'

.js-show-container
  h2.title
    = @person.name.titleize
    | &nbsp;
    a.btn.btn-default.js-show-edit-form href="#" Edit
    | &nbsp;
    a.btn.btn-default.js-show-quick-forms href="#" Show Quick Forms

  - if @person.status.in?(Person::EMPLOYEE_STATUSES)
    p
      - if @person.photo.present?
        img src="#{Refile.attachment_url(@person, :photo, :fit, 200, 200, format: 'jpg')}"
      - else
        | No photo yet
    p
      | Skills:&nbsp;
      - if @person.skills.present?
        strong
          = @person.skills
      - else
        a href="#{edit_person_path(@person)}"
          i.fa.fa-pencil
  p
    | Primary tech:&nbsp;
    - if @person.primary_tech.present?
      strong
        = @person.primary_tech
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  p
    | Current Position:&nbsp;
    - if @person.current_position.present?
      strong
        = @person.current_position
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  p
    | Status:&nbsp;
    span style="background-color: #{PERSON_STATUS_COLORS[@person.status]};"
      = @person.status.presence || 'n/a'
  p
    | Skype:&nbsp;
    - if @person.skype.present?
      strong
        a href="skype:#{@person.skype}" #{@person.skype}
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  p
    | LinkedIn:&nbsp;
    - if @person.linkedin.present?
      strong
        a target="_blank" href="#{@person.linkedin_value}" View
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  p
    | City:&nbsp;
    strong
      = @person.city.presence || 'Kyiv'
  - vacancies = Vacancy.where(tag: @person.tag_list)
  - if vacancies.present?
    p
      | Vacancies:&nbsp;
      - vacancies.each do |vacancy|
        = link_to "#{vacancy.project}, #{vacancy.role}", vacancy_path(vacancy)
        | &nbsp;
  p
    | Tags:&nbsp;
    - unless @person.tag_list.empty?
      - @person.tag_list.each do |tag|
        = link_to tag, people_path(q: {by_tag_including: tag})
        | &nbsp;
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil

  p
    | English:&nbsp;
    - if @person.english.present?
      strong
        = @person.english
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  - if current_user.has_access_to_finances?
    p
      | Expected salary:&nbsp;
      - if @person.expected_salary.present?
        strong
          = @person.expected_salary
      - else
        a href="#{edit_person_path(@person)}"
          i.fa.fa-pencil
  p
    | Email:&nbsp;
    - if @person.email.present?
      strong
        a href="mailto:#{@person.email}" #{@person.email}
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  p
    | Phone:&nbsp;
    - if @person.phone.present?
      strong
        a href="tel:#{@person.phone}" #{@person.phone}
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  p
    | Employment Start Date:&nbsp;
    - if @person.start_date.present?
      strong
        = @person.start_date.strftime(t(:datetime_full)).gsub('00:00, ', '')
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
    p
      - if @person.signed_nda?
        | NDA is signed
      - else
        | NDA is not signed&nbsp;
        a href="#{edit_person_path(@person)}"
          i.fa.fa-pencil
  p
    | Salary type:&nbsp;
    - if @person.salary_type.present?
      strong
        = @person.salary_type
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  - if @person.finish_date.present?
    p
      | Employment Finish Date:&nbsp;
      strong
        = @person.finish_date.strftime(t(:datetime_full)).gsub('00:00, ', '')
  p
    | Date of birth:&nbsp;
    - if @person.day_of_birth.present?
      strong
        = @person.day_of_birth.strftime(t(:datetime_full)).gsub('00:00, ', '')
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil

  p
    | Hiring Source:&nbsp;
    - if @person.source.present?
      strong
        = @person.source
    - else
      a href="#{edit_person_path(@person)}"
        i.fa.fa-pencil
  - if @person.status.in?(Person::EMPLOYEE_STATUSES)
    - if @person.vacation_override.to_i > 0
    p
      | Override vacation days per year:&nbsp;
      strong #{@person.vacation_override}

  - if @person.status.in?(Person::EMPLOYEE_STATUSES)
    h3
      | Days off &nbsp;
      = link_to 'Add', new_dayoff_path(dayoff: {person_id: @person.id}), class: 'btn btn-default'
    table.table.pretty-table
      tr
        th
          | Period
        th
          | Data
      - vacation_stats_per_year(@person).reverse_each.to_h.each_pair do |index, item|
        tr
          td
            = "#{item['period']}, #{(item['year'] + 1).ordinalize} year"
          td
            | Yearly vacation days added: #{item['yearly_vacation_days_assigned']}
            br
            | Total period vacation days: #{item['total_vacation_days']}
            br
            | Used vacation days: #{item['used_vacation']}
            br
            | Overtime days: #{item['overtime_days']}
            br
            | Sick leave days: #{item['sick_leave_days']}
            br
            | Unpaid days off: #{item['unpaid_days_off']}
            br
            | Paid days off: #{item['paid_days_off']}
            br
            | Working day shifts: #{item['working_days_shifts']}
            br
              strong
                | Remaining vacation: #{item['remaining_vacation']}
            | Days will burn: #{item['burn_days']}
            br
            | Days will be transferred: #{item['transfer_days']}

    br
    - @person.dayoffs.order(start_on: :desc).each do |dayoff|
      p
        a href="#{dayoff_path(dayoff)}" #{dayoff.type}
        | &nbsp;
        | #{"#{pluralize(dayoff.days, 'day')} from #{dayoff.start_on&.to_formatted_s(:rfc822)} to #{dayoff.end_on&.to_formatted_s(:rfc822)}"}
        | &nbsp;&nbsp;
        a href="#{edit_dayoff_path(dayoff)}"
          i.fa.fa-pencil
        | &nbsp;&nbsp;
        a href="#{dayoff_path(dayoff)}" data-method="delete" data-confirm="Are you sure ?"
          i.fa.fa-times
        br
        = with_newlines(dayoff.notes)

  h3
    | Latest notes &nbsp;
    = link_to 'Add', new_note_path(note: { person_id: @person.id }), class: 'btn btn-default'
  - @person.notes.accessible_by(current_ability).order(updated_at: :desc).each do |note|
    p
      = note.created_at.strftime(t(:datetime_full)).gsub('00:00, ', '')
      | &nbsp;(#{note.updated_by&.email&.split('@')&.first || '?'})&nbsp;

      - if note.type.in?(current_user.accessible_note_types) || (!note.type.in?(current_user.accessible_note_types) && current_user.has_access_to_finances?)
        a href="#{edit_note_path(note)}" #{note.type}
        br
        ' #{with_newlines(note.value)}
      - else
        = "Content of this note is not available (#{note.type})"

  h3
    | Actions &nbsp;
    = link_to 'Add', new_action_point_path(action_point: {person_id: @person.id}), class: 'btn btn-default'
  - @person.action_points.order(is_completed: :asc, perform_on: :desc).each do |action|
    p
      a href="#{edit_action_point_path(action)}" #{action.perform_on.strftime(t(:datetime_full)).gsub('00:00, ', '')}
      | &nbsp; #{action.is_completed? ? 'completed' : ''}
      br
      = with_newlines(action.value)

  h3
    | Attachments &nbsp;
    = link_to 'Add', new_attachment_path(attachment: { person_id: @person.id }), class: 'btn btn-default'
  - @person.attachments.order(created_at: :desc).each do |attachment|
    p
      = link_to (attachment.name.present? ? attachment.name : attachment.file_filename), Refile.attachment_url(attachment, :file)
      - if attachment.description.present?
        br
        = with_newlines(attachment.description)
      br
  h3
    | Other &nbsp;
  p
    | Profile created &nbsp;
    = "#{@person.created_at.strftime(t(:datetime_full)).gsub('00:00, ', '')} (#{time_ago_in_words(@person.created_at)} ago)"
  p
    | Profile last updated &nbsp;
    = "#{@person.updated_at.strftime(t(:datetime_full))} (#{time_ago_in_words(@person.updated_at)} ago)"
    | &nbsp; by&nbsp;
    = @person.updated_by&.email&.split('@')&.first

  .js-show-quick-forms-container style="display:none;"
    h3 Quick Forms
    p
      b Add Note
      = render 'notes/form', partial_form: true
    p
      b Add Action
      = render 'action_points/form', partial_form: true
    - if @person.status.in?(Person::EMPLOYEE_STATUSES)
      p
        b Add Days off
        = render 'dayoffs/form', partial_form: true
    p
      b Add Attachment
      = render 'attachments/form', partial_form: true
