h2.title
  | EMPLOYEE DAYS OFF &nbsp;

table.table.pretty-table
  thead
    th Name
    th Started
    th Vacation days allowed
    td
      strong
        | Used vacation
      br
      sub = Dayoff::PAID_VACATION_TYPES.join(', ')
    th Days remaining
    th Sick leaves
    th Unpaid days off
    th Actions
  tbody
    - @employees.each do |record|
      tr
        td width="200px"
          span style="width: 10px; background-color: #{PERSON_STATUS_COLORS[record.status]};" &nbsp;&nbsp;&nbsp;&nbsp;
          | &nbsp;
          = link_to record.name, person_path(record)
        - if record.start_date.present?
            td
              = record.start_date.strftime(t(:datetime_full)).gsub('00:00, ', '')
              br
              sub = "#{pluralize(months_worked(record), 'month')}"
            td = allowed_vacation(record)
            td
              = used_vacation(record)
            td
              - days = ([allowed_vacation(record), ENV['VACATION_PER_YEAR'].to_i].max - used_vacation(record)).ceil
              - if days < 0
                span style="color: red"
                  strong
                    = days
              - else
                = days
            td
              = sick_leaves(record)
            td
              = unpaid_days_off(record)
        - else
          td
            a href="#{edit_person_path(record)}"
              i.fa.fa-pencil
          td
            | &nbsp;
          td
            | &nbsp;
          td
            | &nbsp;
          td
            | &nbsp;
          td
            | &nbsp;
        td
          = link_to 'Add', new_dayoff_path(dayoff: {person_id: record.id}), class: 'btn btn-default', target: '_blank'
