h2.title Funnel Report
= link_to "#{@vacancies.count} open vacancies", vacancies_path(q: { status_eq: 'open' })

= simple_form_for :funnel, html: { method: :get, class: 'form' } do |f|
  ' From
  = link_to 'current week', funnel_reports_path
  ',
  = link_to 'today', funnel_reports_path(funnel: { start_date: Time.zone.now.strftime('%d-%m-%Y'), finish_date: 1.day.since.strftime('%d-%m-%Y') })
  = f.input :start_date, as: :string, placeholder: 'dd-mm-yyyy', label: false, input_html: { value: params[:funnel][:start_date], class: 'datepicker' }
  ' To
  = f.input :finish_date, as: :string, placeholder: 'dd-mm-yyyy', label: false, input_html: {value: params[:funnel][:finish_date], class: 'datepicker'}
  = f.button :submit, 'View Report', class: 'btn btn-success'

- no_status_statuses = ['n/a', 'Pinged, no response']
- not_interested_statuses = ['Not interested', 'Not interested, on hold', 'Rejected, no go', 'Rejected, on hold']
- interested_statuses = ['Discussing an opportunity', 'Interested, ping later', 'Interested, on hold']
- interview_statuses = ['Initial interview', 'Technical interview', 'Test assignment']
- passed_interview_statuses = ['Waiting for decision']
- hired_statuses = ['Hired', 'Contractor', 'Past employee', 'Past contractor']

table.table.pretty-table
  thead
    th Vacancy
    th Touched candidates
    th
      'No status
      br
      sub = no_status_statuses.join(', ')
    th
      'Not interested or rejected
      br
      sub = not_interested_statuses.join(', ')
    th
      'Interested
      br
      sub = interested_statuses.join(', ')
    th
      'Interview process
      br
      sub = interview_statuses.join(', ')
    th
      'Passed Interview
      br
      sub = passed_interview_statuses.join(', ')
    th
      'Hired
      br
      sub = hired_statuses.join(', ')
    th Source
    th Updated By
  tbody
    - @vacancies.each do |vacancy|
      - people = Person.accessible_by(current_ability).not_deleted.tagged_with([vacancy.tag].flatten) \
          .where('updated_at >= ? AND updated_at <= ?', \
            Time.strptime(params[:funnel][:start_date], '%d-%m-%Y').strftime('%Y-%m-%d') + ' 00:00:00', \
            Time.strptime(params[:funnel][:finish_date], '%d-%m-%Y').strftime('%Y-%m-%d') + ' 00:00:00')
      tr
        td = link_to "#{vacancy.project}, #{vacancy.role}", vacancy_path(vacancy)
        td
          = link_to people.count, people_path(q: { updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date] })
        td
          = link_to people.where(status: no_status_statuses).count, people_path(q: {updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], status_in: no_status_statuses })
        td
          = link_to people.where(status: not_interested_statuses).count, people_path(q: {updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], status_in: not_interested_statuses})
        td
          = link_to people.where(status: interested_statuses).count, people_path(q: {updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], status_in: interested_statuses})
        td
          = link_to people.where(status: interview_statuses).count, people_path(q: {updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], status_in: interview_statuses})
        td
          = link_to people.where(status: passed_interview_statuses).count, people_path(q: {updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], status_in: passed_interview_statuses})
        td
          = link_to people.where(status: hired_statuses).count, people_path(q: {updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], status_in: hired_statuses})
        td
          - people.pluck(:source).uniq.each do |source|
            = link_to "#{people.where(source: source).count}&nbsp;#{source.blank? ? 'n/a' : source}".html_safe, people_path(q: { updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], source_eq: source })
            br
        td
          - people.pluck(:updated_by_id).uniq.each do |by_id|
            = link_to "#{people.where(updated_by_id: by_id).count}&nbsp;#{User.find(by_id).email.split('@').first}".html_safe, people_path(q: { updated_at_gteq: params[:funnel][:start_date], updated_at_lteq: params[:funnel][:finish_date], updated_by_id_eq: by_id })
            br
